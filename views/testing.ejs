<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
</head>
<body>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<!-- isi konten -->

<link rel="stylesheet" type="text/css" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="https://pixinvent.com/stack-responsive-bootstrap-4-admin-template/app-assets/css/bootstrap-extended.min.css">
<link rel="stylesheet" type="text/css" href="https://pixinvent.com/stack-responsive-bootstrap-4-admin-template/app-assets/fonts/simple-line-icons/style.min.css">
<link rel="stylesheet" type="text/css" href="https://pixinvent.com/stack-responsive-bootstrap-4-admin-template/app-assets/css/colors.min.css">
<link rel="stylesheet" type="text/css" href="https://pixinvent.com/stack-responsive-bootstrap-4-admin-template/app-assets/css/bootstrap.min.css">
<link href="https://fonts.googleapis.com/css?family=Montserrat&display=swap" rel="stylesheet">

<div class="grey-bg container-fluid">
  <section id="minimal-statistics">
    <div class="row">
      <div class="col-12 mt-3 mb-1">
        <h4 class="text-uppercase">Hay <%= nama %></h4>
        <p>Slihakan Di pilih.</p>
      </div>
    </div>
    <style>
      /* Gaya CSS untuk notifikasi */
      .fixed-notification {
        position: fixed;
        top: -100px; 
        left: 50%; 
        transform: translateX(-50%); 
        z-index: 9999; 
        transition: top 0.5s; 
      }
  
      .show-notification {
        top: 20px; 
      }
      .icon-background {
      display: inline-block;
      padding: 12px;
      background-color: white;
      border-radius: 100%;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      position: fixed;
      bottom: 10px;
      font-size: 20px;
      box-shadow: 11px 7px 32px 0px rgba(0,0,0,0.58);
-webkit-box-shadow: 11px 7px 32px 0px rgba(0,0,0,0.58);
-moz-box-shadow: 11px 7px 32px 0px rgba(0,0,0,0.58);
      }  
      body {
    margin: 0;
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #f0f0f0;
  }

  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7); /* Adjust the opacity as needed */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999; /* Ensure the overlay is above other content */
  }

  .loading-container {
    text-align: center;
    z-index: 10000; /* Ensure the loading container is above the overlay */
  }

  .loader {
    border: 4px solid #f3f3f3;
    border-top: 4px solid #3498db;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    animation: spin 2s linear infinite;
    margin: 0 auto 10px;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
    </style>


<!-- untuk loading -->
<div class="overlay">
  <div class="loading-container">
    <div class="loader"></div>
    <p>Loading...</p>
  </div>
</div>
<!-- untuk notifikasi -->
  <div id="notification" class="alert alert-info fixed-notification" style="display: none;">

  </div>
  
  <input type="text" id="searchInput" onkeyup="searchAndDisplay()" placeholder="Search">

  <% db_data_kontak.forEach(VCF => { %>
    <div id="<%= VCF._id %>" class="container mt-3">
      <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h5><%= VCF.firstName +" "+ VCF.lastName %></h5>
          <button type="button" class="close" aria-label="Close" onclick="Hapus_kontak('<%= VCF._id %>')">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="card-body">
          <form class="editForm">
            <div class="form-group">
              <label>Nama</label>
              <div class="nama">
              <input class="form-control" type="text" value="<%= VCF.firstName %>" id="name_<%= VCF._id %>" placeholder="Masukkan Nama">
            </div>
            </div>
            <div class="form-group">
              <label>Nomor Telepon</label>
              <input type="tel" value="<%= VCF.phoneNumber %>" class="form-control" id="phone_<%= VCF._id %>" placeholder="Masukkan Nomor Telepon">
            </div>
            <div class="form-group">
              <label>Sebagai Apa</label>
              <select class="form-control" id="role_<%= VCF._id %>" required>
                <option value="<%= VCF.sebagai %>">default ( <%= VCF.sebagai %> )</option>
                <option value="Tamu Undangan">Tamu Undangan</option>
                <option value="Besan">Besan</option>
                <option value="Saksi">Saksi</option>
              </select>
            </div>
            <button type="button" class="btn btn-primary" onclick="updateData('<%= VCF._id %>')">Save</button>
            <button type="button" class="btn btn-success" onclick="Send_Pandding('<%= VCF._id %>')">Undang Pandding</button>
          </form>
        </div>
      </div>
    </div>
  <% }); %>
  
  <div class="card">
    <h2>Tidak Ada Data Kontak Lagi</h2>
</div>
      <span class="icon-background">
        <a href="/pilih_upload" class="feather icon-arrow-left"></a>
      </span>
      
    <script>
  window.addEventListener("load", function () {
    const overlay = document.querySelector(".overlay");

    // Simulate a delay for demonstration purposes
    setTimeout(function () {
      overlay.style.display = "none";
    }, 2000); // 2 seconds

    // You can replace the setTimeout with your actual loading logic here
  });
      // Fungsi untuk menhapus data pengguna berdasarkan ID
      function Hapus_kontak(id_hapus_kontak) {
        const notificationCard = document.getElementById('notification');
        const showNotificationBtn = document.getElementById('showNotification');
        const element = document.getElementById(id_hapus_kontak);



        // Objek data yang akan dikirimkan
        const hapus_kontak = {
          Hapus:true
        };
    
        fetch(`/hapus_kontak/${id_hapus_kontak}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(hapus_kontak)
        })
        .then(response => response.json())
        .then(() => {

      element.remove();

      notificationCard.innerHTML="Behasil Hapus!";

      notificationCard.style.display = 'block';

      notificationCard.classList.add('show-notification');

      setTimeout(() => {

        notificationCard.classList.remove('show-notification');

        setTimeout(() => {
          notificationCard.style.display = 'none';
        }, 500); 
      }, 2000);
    })
        .catch(error => {
          console.error('Terjadi kesalahan:', error);
        });
      }

// batasnya ------------------------------------------------------------------


      // Fungsi untuk mengupdate data pengguna berdasarkan ID
      function Send_Pandding(id_send_pandding) {
        const notificationCard = document.getElementById('notification');
        const showNotificationBtn = document.getElementById('showNotification');
        const element = document.getElementById(id_send_pandding);



        // Objek data yang akan dikirimkan
        const Send_Pandding = {
          status:"sudah_siap_kirim"
        };
    
        fetch(`/pandding_kirim/${id_send_pandding}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(Send_Pandding)
        })
        .then(response => response.json())
        .then(() => {

      element.remove();

      notificationCard.innerHTML="behasil Tersimpan di Panddingan Kirim Undangan";

      notificationCard.style.display = 'block';

      notificationCard.classList.add('show-notification');

      setTimeout(() => {

        notificationCard.classList.remove('show-notification');

        setTimeout(() => {
          notificationCard.style.display = 'none';
        }, 500); 
      }, 2000);
    })
        .catch(error => {
          console.error('Terjadi kesalahan:', error);
        });
      }

// batasnya ------------------------------------------------------------------

      // Fungsi untuk mengupdate data pengguna berdasarkan ID
      function updateData(id_edit) {
        const name = document.getElementById(`name_${id_edit}`).value;
        const phone = document.getElementById(`phone_${id_edit}`);
        const role = document.getElementById(`role_${id_edit}`).value;
        const notificationCard = document.getElementById('notification');
        const showNotificationBtn = document.getElementById('showNotification');

        if(phone.value.substring(0,1)=="0"){
        phone.value = phone.value.substring(1);
      }if (phone.value.substring(0,4)=="+620"){
        phone.value= phone.value.substring(4);
      }if (phone.value.substring(0,3)=="620"){
        phone.value= phone.value.substring(3);
      }if (phone.value.substring(0,1)=="+"){
        phone.value= phone.value.substring(1);
      }if(phone.value.substring(0,2) == "62" ){
        phone.value= phone.value.substring(2);
      }if (phone.value.substring(0,3)=="+62"){
        phone.value= phone.value.substring(3);
      }if (phone.value.substring(0,2)=="+0"){
        phone.value= phone.value.substring(2);
      }
      else{
        phone.value = phone.value;
      }

        // Objek data yang akan dikirimkan
        const data = {
          firstName: name,
          phoneNumber: phone.value,
          sebagai: role
        };
    
        fetch(`/edit_kirim/${id_edit}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(() => {

      notificationCard.innerHTML="behasil Edit Kontak!";

      notificationCard.style.display = 'block';

      notificationCard.classList.add('show-notification');

      setTimeout(() => {
        notificationCard.classList.remove('show-notification');


        setTimeout(() => {
          notificationCard.style.display = 'none';
        }, 500); 
      }, 2000);
    })
        .catch(error => {
          console.error('Terjadi kesalahan:', error);
        });
      }

      function searchAndDisplay() {
  const searchInput = document.getElementById('searchInput').value.toLowerCase();
  const nama = document.querySelectorAll('.container');

  nama.forEach(nama => {
    const headingText = nama.textContent.toLowerCase();
    if (headingText.includes(searchInput)) {
      nama.style.display = 'block';
    } else {
      nama.style.display = 'none';
    }
  });
}
    </script>
    


<!-- batas isi konten -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />
    
</body>
</html>